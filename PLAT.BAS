#INCLUDE ONCE "INC/RAYLIB.BI"

DECLARE FUNCTION BOXCOLLISION(SPOT AS VECTOR3, BOX AS VECTOR3, BOXWIDTH AS INTEGER, BOXHEIGHT AS INTEGER, BOXLENGTH AS INTEGER) AS BOOLEAN

CONST SCREEN_WIDTH = 256 * 4
CONST SCREEN_HEIGHT = 192 * 4
CONST CAMERA_Y_OFF = 5
CONST CAMERA_Z_OFF = 15
CONST CAMERA_HEIGHT = 3

INITWINDOW( SCREEN_WIDTH, SCREEN_HEIGHT, "RAYLIB PLATFORMER TEST" )

DIM AS VECTOR3 PLAYER_POS = VECTOR3(0,0,0)
DIM AS DOUBLE OLDTIME = 0
DIM AS DOUBLE ROTATION = 0
DIM AS DOUBLE SIN_CAM = 0
DIM AS DOUBLE COS_CAM = 0
DIM AS DOUBLE TEMPX = 0
DIM AS DOUBLE TEMPZ = 0
VAR DEBOUNCE = 0
VAR ISJUMPING = FALSE
VAR COLLIDETEST = FALSE

DIM AS CAMERA3D CAMERA
CAMERA.POSITION = VECTOR3(PLAYER_POS.X, PLAYER_POS.Y + CAMERA_Y_OFF, PLAYER_POS.Z + CAMERA_Z_OFF)
CAMERA.TARGET = VECTOR3(PLAYER_POS.X, PLAYER_POS.Y + CAMERA_HEIGHT, PLAYER_POS.Z)
CAMERA.UP = VECTOR3(0, 1, 0)
CAMERA.FOVY = 40
CAMERA.TYPE = CAMERA_PERSPECTIVE

DIM AS IMAGE CHECKERS = GENIMAGECHECKED(1000, 1000, 1, 1, RAYGREEN, DARKGREEN)
DIM AS TEXTURE2D TEXTURE = LOADTEXTUREFROMIMAGE(CHECKERS)

DIM AS MODEL FLOOR = LOADMODELFROMMESH(GENMESHPLANE(2, 2, 5, 5))
FLOOR.MATERIALS[0].MAPS[MAP_DIFFUSE].TEXTURE = TEXTURE

'DECLARE FUNCTION BOXCOLLISION(BYREF POINT AS VECTOR3, BOX AS VECTOR3, BOXWIDTH AS INTEGER, BOXHEIGHT AS INTEGER, BOXLENGTH AS INTEGER) AS BOOLEAN

MAIN:
	OLDTIME = GETTIME()

	BEGINDRAWING()
		CLEARBACKGROUND(SKYBLUE)
		BEGINMODE3D(CAMERA)
			DRAWSPHERE(VECTOR3(PLAYER_POS.X, PLAYER_POS.Y + 0.75, PLAYER_POS.Z), 0.8, RAYBLUE)
	
			DRAWCUBE(VECTOR3(0,0,-20),10,5,10,YELLOW)
			DRAWCUBE(VECTOR3(20,0,0),10,10,10,RAYBLUE)
			DRAWCUBE(VECTOR3(0,0,20),10,15,10,RAYRED)
			DRAWCUBE(VECTOR3(-20,0,0),10,20,10,VIOLET)
			
			DRAWMODEL(FLOOR, VECTOR3(0,0,0), 1000, WHITE )
		ENDMODE3D()
		
		DRAWTEXT(STR(ROTATION), 0,0,40, RAYRED )
		DRAWTEXT(STR(PLAYER_POS.X), 0,40,40, RAYRED )
		DRAWTEXT(STR(PLAYER_POS.Y), 0,80,40, RAYRED )
		DRAWTEXT(STR(PLAYER_POS.Z), 0,120,40, RAYRED )
		DRAWTEXT(STR(COLLIDETEST), 0,160,40, RAYRED )
	ENDDRAWING()
	IF ISJUMPING THEN
		IF PLAYER_POS.Y < 15 THEN PLAYER_POS.Y += 1 ELSE ISJUMPING = FALSE
	ELSE 
		IF PLAYER_POS.Y > 0 THEN PLAYER_POS.Y -= 1
	END IF
	
	IF ISKEYDOWN(KEY_LEFT) THEN ROTATION =  -.075 ELSE IF ISKEYDOWN(KEY_RIGHT) THEN ROTATION =  .075 ELSE ROTATION = 0
	
	SIN_CAM = SIN(ROTATION)
	COS_CAM = COS(ROTATION)

	TEMPX = CAMERA.POSITION.X - PLAYER_POS.X
	TEMPZ = CAMERA.POSITION.Z - PLAYER_POS.Z

	CAMERA.POSITION.X = (COS_CAM * TEMPX - SIN_CAM * TEMPZ) + PLAYER_POS.X
	CAMERA.POSITION.Y = PLAYER_POS.Y + CAMERA_Y_OFF
	CAMERA.POSITION.Z = (SIN_CAM * TEMPX + COS_CAM * TEMPZ) + PLAYER_POS.Z

	CAMERA.TARGET = VECTOR3(PLAYER_POS.X, PLAYER_POS.Y + CAMERA_HEIGHT, PLAYER_POS.Z)
	
	TEMPX = PLAYER_POS.X - CAMERA.POSITION.X
	TEMPZ = PLAYER_POS.Z - CAMERA.POSITION.Z
	
	COLLIDETEST = BOXCOLLISION(VECTOR3(PLAYER_POS.X + TEMPX/9,PLAYER_POS.Y,PLAYER_POS.Z + TEMPZ/9), VECTOR3(0, 0,-20),10,5,10)

	IF ISKEYDOWN(KEY_UP) AND NOT COLLIDETEST THEN 
		PLAYER_POS.X += TEMPX/10
		PLAYER_POS.Z += TEMPZ/10
		CAMERA.POSITION.X += TEMPX/10
		CAMERA.POSITION.Z += TEMPZ/10
	END IF
	IF ISKEYDOWN(KEY_DOWN) THEN 		
		PLAYER_POS.X -= TEMPX/10
		PLAYER_POS.Z -= TEMPZ/10
		CAMERA.POSITION.X -= TEMPX/10
		CAMERA.POSITION.Z -= TEMPZ/10
	ENDIF 
	IF ISKEYDOWN(KEY_SPACE) AND PLAYER_POS.Y < 1 THEN 		
		ISJUMPING = TRUE
	ENDIF 
	
	
	
	
	
REST:
	IF GETTIME() - OLDTIME < 1 / 60 THEN SLEEP 1:GOTO REST

IF NOT WINDOWSHOULDCLOSE() THEN GOTO MAIN

END:
CLOSEWINDOW()

FUNCTION BOXCOLLISION(SPOT AS VECTOR3, BOX AS VECTOR3, BOXWIDTH AS INTEGER, BOXHEIGHT AS INTEGER, BOXLENGTH AS INTEGER) AS BOOLEAN
	VAR FLAG = FALSE
	IF (BOX.X - (BOXWIDTH/2) < SPOT.X) AND (SPOT.X < BOX.X + (BOXWIDTH/2)) THEN
		IF (BOX.Y - (BOXHEIGHT/2) < SPOT.Y) AND (SPOT.Y < BOX.Y + (BOXHEIGHT/2)) THEN
			IF (BOX.Z - (BOXLENGTH/2) < SPOT.Z) AND (SPOT.Z < BOX.Z + (BOXLENGTH/2)) THEN
				FLAG = TRUE
			END IF 
		END IF 
	END IF 
	RETURN FLAG
END FUNCTION

